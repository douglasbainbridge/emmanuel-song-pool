{"version":3,"sources":["Icon.js","Song.js","List.js","views/PrePreach.js","views/PostPreach.js","App.js","serviceWorker.js","index.js","config/filterSongBySubCat.js","config/contentful.js","config/processContentful.js"],"names":["library","add","faSpotify","Icon","props","icon","react_default","a","createElement","index_es","prefix","iconName","Small","_ref","fullTitle","title","content","className","Song","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","expanded","_this2","_this$props$song","song","artist","maleKey","femaleKey","focusList","notes","flowCategories","flowSubcategories","spotifyLink","style","border","marginBottom","onClick","setState","classnames","text-green","Song_Small","maxHeight","overflow","transition","join","dangerouslySetInnerHTML","__html","documentToHtmlString","Component","List","list","width","react_flip_move_es","staggerDelayBy","staggerDurationBy","duration","appearAnimation","enterAnimation","map","s","src_Song","key","PrePreach","callToWorshipDeclaration","filterSongBySubCat","songs","focusSongs","callToWorshipDraw","revelationAssurance","src_List","PostPreach","history","createHistory","App","loading","error","contentful","getEntries","content_type","limit","then","validatedContent","processContentful","length","catch","err","console","log","_this3","react_router","react_router_dom","to","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","cat","subcat","filter","includes","client","require","createClient","space","accessToken","items","c","fields"],"mappings":"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","file":"static/js/main.d4782a44.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faSpotify } from '@fortawesome/free-brands-svg-icons'\nlibrary.add(faSpotify)\n\nexport default (props) => {\n    if (props.icon === \"spotify\") {\n        return (\n            <span>\n                <FontAwesomeIcon\n                    icon={\n                        {\n                            prefix: 'fab',\n                            iconName: \"spotify\"\n                        }\n                    }\n                />\n            </span>\n        )\n    }\n    return null\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport Icon from './Icon'\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport classnames from 'classnames'\n\n\nconst Small = ({ fullTitle, title, content }) => {\n    return <span className=\"mr-2\" title={fullTitle}>{title}: <strong>{content}</strong></span>\n}\n\nclass Song extends Component {\n    constructor() {\n        super()\n        this.state = {\n            expanded: false\n        }\n    }\n    render() {\n        const { title, artist, maleKey, femaleKey, focusList, notes, flowCategories, flowSubcategories, spotifyLink } = this.props.song\n        return (\n            <div style={{ border: '1px solid rgb(234,234,234)', marginBottom: '-1px' }}>\n                <button\n                    onClick={() => { this.setState({ expanded: !this.state.expanded }) }}\n                    className={classnames(\"song-btn\", \"p-1\", \"w-100\", { 'text-green': focusList })}\n                >\n                    <h4 className=\"mb-0 d-inline-block\">{title}</h4><small>/{artist}</small>\n                    <span className=\"float-right\">\n                        {maleKey && <Small fullTitle=\"Suggested male key\" title=\"M\" content={maleKey} />}\n                        {femaleKey && <Small fullTitle=\"Suggested female key\" title=\"F\" content={femaleKey} />}\n                    </span>\n                </button>\n                <div\n                    style={{\n                        maxHeight: this.state.expanded ? '300px' : '0px',\n                        overflow: 'hidden',\n                        transition: 'max-height 0.5s'\n                    }}\n                >\n                    <div className=\"p-1\" >\n                        {spotifyLink && <Icon icon=\"spotify\" />}\n                        <h5 className=\"mb-0 mt-2\">Flow Themes:</h5>\n                        {flowCategories && flowCategories.join(', ')}\n                        <h5 className=\"mb-0 mt-2\">Flow Sub Themes:</h5>\n                        {flowSubcategories && flowSubcategories.join(', ')}\n                        <div dangerouslySetInnerHTML={{ __html: documentToHtmlString(notes) }} />\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nSong.propTypes = {\n    song: PropTypes.object.isRequired,\n}\n\nexport default Song","import React from 'react'\nimport PropTypes from 'prop-types';\nimport Song from './Song'\nimport FlipMove from 'react-flip-move';\n\nfunction List({ list, title }) {\n    return (\n        <div className=\"mb-4\" style={{ width: '300px' }}>\n            <h3>{title}</h3>\n            <FlipMove\n                staggerDelayBy={30}\n                staggerDurationBy={0}\n                duration={300}\n                appearAnimation={\"elevator\"}\n                enterAnimation={\"elevator\"}\n            >\n                {list.map(s => <Song key={s.title + s.artist} song={s} />)}\n            </FlipMove>\n        </div>\n    )\n}\n\nList.propTypes = {\n    list: PropTypes.array.isRequired,\n}\n\nexport default List","import React from 'react'\nimport List from '../List'\nimport filterSongBySubCat from '../config/filterSongBySubCat'\n\nexport default function PrePreach(props) {\n    const callToWorshipDeclaration = filterSongBySubCat(props.songs, 'Call To Worship', 'Declaration & Praise', props.focusSongs)\n    const callToWorshipDraw = filterSongBySubCat(props.songs, 'Call To Worship', 'Drawing Near', props.focusSongs)\n    const revelationAssurance = filterSongBySubCat(props.songs, 'Revelation', 'Assurance in Christ', props.focusSongs)\n    return (\n        <div className=\"d-flex flex-row pt-4\">\n            <div className=\"mx-3\">\n                <h2>Call to Worship</h2>\n                <List title=\"Declaration and Praise\" list={callToWorshipDeclaration} />\n                <List title=\"Drawing Near\" list={callToWorshipDraw} />\n            </div>\n            <div>\n                <h2>Revelation</h2>\n                <List title=\"Assurance in Christ\" list={revelationAssurance} />\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function PostPreach(props) {\n    return (\n        <div className=\"d-flex flex-row pt-4\">\n            <div className=\"mx-3\">\n                <h2>Post Preach</h2>\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport { Router, Route, Switch, Link } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory'\nimport './App.css';\nimport contentful from './config/contentful'\nimport processContentful from './config/processContentful'\nimport PrePreach from './views/PrePreach'\nimport PostPreach from './views/PostPreach'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst history = createHistory()\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      loading: true,\n      songs: [],\n      error: '',\n      focusSongs: false\n    }\n  }\n\n  componentDidMount() {\n    contentful.getEntries({\n      content_type: 'song',\n      limit: 1000\n    })\n      .then(content => {\n        const validatedContent = processContentful(content)\n        if (validatedContent.length === 0) {\n          this.setState({\n            error: 'There was a problem loading, please try refreshing the page',\n            loading: false\n          })\n        } else {\n          this.setState({\n            songs: validatedContent,\n            loading: false\n          })\n        }\n\n      })\n      .catch(err => {\n        console.log(err)\n        this.setState({ loading: false, error: 'There was an error' })\n      })\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <div>Loading</div>\n    }\n    if (this.state.error) {\n      return <div>{this.state.error}</div>\n    }\n\n\n\n    return (\n      <Router history={history}>\n        <div className=\"container-fluid pt-3\">\n          <button onClick={() => { this.setState({ focusSongs: !this.state.focusSongs }) }}>\n            {this.state.focusSongs ? 'Show All' : 'Show Focus List'}\n          </button>\n          <Link to='/'>Pre-preach</Link>\n          <Link to='/post-preach'>Post-preach</Link>\n          <Switch>\n            <Route exact path=\"/\">\n              <PrePreach\n                songs={this.state.songs}\n                focusSongs={this.state.focusSongs}\n              />\n            </Route>\n            <Route exact path=\"/post-preach\">\n              <PostPreach\n                songs={this.state.songs}\n                focusSongs={this.state.focusSongs}\n              />\n            </Route>\n          </Switch>\n\n\n        </div>\n      </Router>\n\n    )\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = (songs, cat, subcat, focusSongs) => {\n    return songs.filter(s => s.flowCategories && s.flowCategories.includes(cat) && s.flowSubcategories && s.flowSubcategories.includes(subcat) && (s.focusList || !focusSongs))\n}","const contentful = require(\"contentful\");\nlet client\nclient = contentful.createClient({\n    space: 'nkx4mjs43g1a',\n    accessToken: 'AJETm98BuwXsHI85-2o5pHoQLyvGYxSH5tGzfFYVTDM'\n});\nmodule.exports = client","module.exports = (content) => {\n    if (!content) { return ([]) }\n    if (!content.items) { return ([]) }\n    return content.items.map(c => c.fields)\n}"],"sourceRoot":""}