{"version":3,"sources":["Icon.js","Song.js","List.js","App.js","serviceWorker.js","index.js","config/contentful.js","config/processContentful.js"],"names":["library","add","faSpotify","Icon","props","icon","react_default","a","createElement","index_es","prefix","iconName","Small","_ref","fullTitle","title","content","className","Song","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","expanded","_this2","_this$props$song","song","artist","maleKey","femaleKey","focusList","notes","flowCategories","flowSubcategories","style","border","onClick","setState","cursor","classnames","bg-green","Song_Small","maxHeight","overflow","transition","dangerouslySetInnerHTML","__html","documentToHtmlString","join","Component","List","list","react_flip_move_es","staggerDelayBy","staggerDurationBy","duration","delay","appearAnimation","enterAnimation","map","s","src_Song","key","App","loading","songs","error","contentful","getEntries","content_type","limit","then","validatedContent","processContentful","length","catch","err","console","log","callToWorshipDeclaration","filter","includes","callToWorshipDraw","src_List","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","client","require","createClient","space","accessToken","module","exports","items","c","fields"],"mappings":"gPAIAA,IAAQC,IAAIC,KAEG,IAAAC,EAAA,SAACC,GACZ,MAAmB,YAAfA,EAAMC,KAEFC,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIJ,KACI,CACIK,OAAQ,MACRC,SAAU,cAO3B,+BCfLC,EAAQ,SAAAC,GAAmC,IAAhCC,EAAgCD,EAAhCC,UAAWC,EAAqBF,EAArBE,MAAOC,EAAcH,EAAdG,QAC/B,OAAOV,EAAAC,EAAAC,cAAA,QAAMS,UAAU,OAAOF,MAAOD,GAAYC,EAA1C,KAAkDT,EAAAC,EAAAC,cAAA,cAASQ,KAmDvDE,cA/CX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACTC,UAAU,GAHJR,wEAML,IAAAS,EAAAN,KAAAO,EAC8FP,KAAKlB,MAAM0B,KAAtGf,EADHc,EACGd,MAAOgB,EADVF,EACUE,OAAQC,EADlBH,EACkBG,QAASC,EAD3BJ,EAC2BI,UAAWC,EADtCL,EACsCK,UAAWC,EADjDN,EACiDM,MAAOC,EADxDP,EACwDO,eAAgBC,EADxER,EACwEQ,kBAC7E,OACI/B,EAAAC,EAAAC,cAAA,OAAK8B,MAAO,CAAEC,OAAQ,+BAClBjC,EAAAC,EAAAC,cAAA,OACIgC,QAAS,WAAQZ,EAAKa,SAAS,CAAEd,UAAWC,EAAKF,MAAMC,YACvDW,MAAO,CAAEI,OAAQ,WACjBzB,UAAW0B,IAAW,MAAO,CAAEC,WAAYV,KAE3C5B,EAAAC,EAAAC,cAAA,MAAIS,UAAU,QAAQF,EAAMT,EAAAC,EAAAC,cAAA,kBAAUuB,IACtCzB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACVe,GAAW1B,EAAAC,EAAAC,cAACqC,EAAD,CAAO/B,UAAU,qBAAqBC,MAAM,IAAIC,QAASgB,IACpEC,GAAa3B,EAAAC,EAAAC,cAACqC,EAAD,CAAO/B,UAAU,uBAAuBC,MAAM,IAAIC,QAASiB,MAGjF3B,EAAAC,EAAAC,cAAA,OACI8B,MAAO,CACHQ,UAAWxB,KAAKI,MAAMC,SAAW,QAAU,MAC3CoB,SAAU,SACVC,WAAY,oBAGhB1C,EAAAC,EAAAC,cAAA,OAAKS,UAAU,OACXX,EAAAC,EAAAC,cAACL,EAAD,CAAME,KAAK,YACXC,EAAAC,EAAAC,cAAA,OAAKyC,wBAAyB,CAAEC,OAAQC,+BAAqBhB,MAC7D7B,EAAAC,EAAAC,cAAA,0BACC4B,GAAkBA,EAAegB,KAAK,MACvC9C,EAAAC,EAAAC,cAAA,8BACC6B,GAAqBA,EAAkBe,KAAK,gBAnClDC,qBCiBJC,MAtBf,SAAAzC,GAA+B,IAAf0C,EAAe1C,EAAf0C,KAAMxC,EAASF,EAATE,MAClB,OACIT,EAAAC,EAAAC,cAAA,OAAKS,UAAU,QACXX,EAAAC,EAAAC,cAAA,UAAKO,GACLT,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CACIC,eAAgB,IAChBC,kBAAmB,EACnBC,SAAU,IACVC,MAAO,IACPC,gBAAiB,WACjBC,eAAgB,YAEfP,EAAKQ,IAAI,SAAAC,GAAC,OAAI1D,EAAAC,EAAAC,cAACyD,EAAD,CAAMC,IAAKF,EAAEjD,MAAQiD,EAAEjC,OAAQD,KAAMkC,SCkDrDG,sBA1Db,SAAAA,IAAc,IAAAhD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6C,IACZhD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+C,GAAA1C,KAAAH,QACKI,MAAQ,CACX0C,SAAS,EACTC,MAAO,GACPC,MAAO,IALGnD,mFASM,IAAAS,EAAAN,KAClBiD,IAAWC,WAAW,CACpBC,aAAc,OACdC,MAAO,MAENC,KAAK,SAAA3D,GACJ,IAAM4D,EAAmBC,IAAkB7D,GACX,IAA5B4D,EAAiBE,OACnBlD,EAAKa,SAAS,CACZ6B,MAAO,8DACPF,SAAS,IAGXxC,EAAKa,SAAS,CACZ4B,MAAOO,EACPR,SAAS,MAKdW,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZpD,EAAKa,SAAS,CAAE2B,SAAS,EAAOE,MAAO,0DAK3C,GAAIhD,KAAKI,MAAM0C,QACb,OAAO9D,EAAAC,EAAAC,cAAA,sBAET,GAAIc,KAAKI,MAAM4C,MACb,OAAOhE,EAAAC,EAAAC,cAAA,WAAMc,KAAKI,MAAM4C,OAI1B,IAAMa,EAA2B7D,KAAKI,MAAM2C,MAAMe,OAAO,SAAApB,GAAC,OAAIA,EAAE5B,eAAeiD,SAAS,oBAAsBrB,EAAE3B,kBAAkBgD,SAAS,0BACrIC,EAAoBhE,KAAKI,MAAM2C,MAAMe,OAAO,SAAApB,GAAC,OAAIA,EAAE5B,eAAeiD,SAAS,oBAAsBrB,EAAE3B,kBAAkBgD,SAAS,kBACpI,OACE/E,EAAAC,EAAAC,cAAA,OAAKS,UAAU,aACbX,EAAAC,EAAAC,cAAC+E,EAAD,CAAMhC,KAAMjC,KAAKI,MAAM2C,QACvB/D,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAC+E,EAAD,CAAMxE,MAAM,yBAAyBwC,KAAM4B,IAC3C7E,EAAAC,EAAAC,cAAC+E,EAAD,CAAMxE,MAAM,eAAewC,KAAM+B,YApDvBjC,cCIEmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOxF,EAAAC,EAAAC,cAACuF,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzB,KAAK,SAAA0B,GACjCA,EAAaC,sDEnInB,IACIC,EACJA,EAFmBC,EAAQ,KAEPC,aAAa,CAC7BC,MAAO,eACPC,YAAa,gDAEjBC,EAAOC,QAAUN,oBCNjBK,EAAOC,QAAU,SAAC7F,GACd,OAAKA,GACAA,EAAQ8F,MACN9F,EAAQ8F,MAAM/C,IAAI,SAAAgD,GAAC,OAAIA,EAAEC,SAFR","file":"static/js/main.88a3c44e.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faSpotify } from '@fortawesome/free-brands-svg-icons'\nlibrary.add(faSpotify)\n\nexport default (props) => {\n    if (props.icon === \"spotify\") {\n        return (\n            <span>\n                <FontAwesomeIcon\n                    icon={\n                        {\n                            prefix: 'fab',\n                            iconName: \"spotify\"\n                        }\n                    }\n                />\n            </span>\n        )\n    }\n    return null\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport Icon from './Icon'\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport classnames from 'classnames'\n\nconst Small = ({ fullTitle, title, content }) => {\n    return <span className=\"mr-3\" title={fullTitle}>{title}: <strong>{content}</strong></span>\n}\n\nclass Song extends Component {\n    constructor() {\n        super()\n        this.state = {\n            expanded: false\n        }\n    }\n    render() {\n        const { title, artist, maleKey, femaleKey, focusList, notes, flowCategories, flowSubcategories } = this.props.song\n        return (\n            <div style={{ border: '1px solid rgba(0,0,0,.125)' }}>\n                <div\n                    onClick={() => { this.setState({ expanded: !this.state.expanded }) }}\n                    style={{ cursor: 'pointer', }}\n                    className={classnames(\"p-1\", { 'bg-green': focusList })}\n                >\n                    <h4 className=\"mb-0\">{title}<span> - {artist}</span></h4>\n                    <div className=\"d-flex flex-row\">\n                        {maleKey && <Small fullTitle=\"Suggested male key\" title=\"M\" content={maleKey} />}\n                        {femaleKey && <Small fullTitle=\"Suggested female key\" title=\"F\" content={femaleKey} />}\n                    </div>\n                </div>\n                <div\n                    style={{\n                        maxHeight: this.state.expanded ? '300px' : '0px',\n                        overflow: 'hidden',\n                        transition: 'max-height 0.5s'\n                    }}\n                >\n                    <div className=\"p-3\" >\n                        <Icon icon=\"spotify\" />\n                        <div dangerouslySetInnerHTML={{ __html: documentToHtmlString(notes) }} />\n                        <h5>Flow Themes:</h5>\n                        {flowCategories && flowCategories.join(', ')}\n                        <h5>Flow Sub Themes:</h5>\n                        {flowSubcategories && flowSubcategories.join(', ')}\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nSong.propTypes = {\n    song: PropTypes.object.isRequired,\n}\n\nexport default Song","import React from 'react'\nimport PropTypes from 'prop-types';\nimport Song from './Song'\nimport FlipMove from 'react-flip-move';\n\nfunction List({ list, title }) {\n    return (\n        <div className=\"mb-4\">\n            <h3>{title}</h3>\n            <FlipMove\n                staggerDelayBy={200}\n                staggerDurationBy={0}\n                duration={300}\n                delay={500}\n                appearAnimation={\"elevator\"}\n                enterAnimation={\"elevator\"}\n            >\n                {list.map(s => <Song key={s.title + s.artist} song={s} />)}\n            </FlipMove>\n        </div>\n    )\n}\n\nList.propTypes = {\n    list: PropTypes.array.isRequired,\n}\n\nexport default List","import React, { Component } from 'react';\nimport './App.css';\nimport contentful from './config/contentful'\nimport processContentful from './config/processContentful'\nimport List from './List'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      loading: true,\n      songs: [],\n      error: ''\n    }\n  }\n\n  componentDidMount() {\n    contentful.getEntries({\n      content_type: 'song',\n      limit: 1000\n    })\n      .then(content => {\n        const validatedContent = processContentful(content)\n        if (validatedContent.length === 0) {\n          this.setState({\n            error: 'There was a problem loading, please try refreshing the page',\n            loading: false\n          })\n        } else {\n          this.setState({\n            songs: validatedContent,\n            loading: false\n          })\n        }\n\n      })\n      .catch(err => {\n        console.log(err)\n        this.setState({ loading: false, error: 'There was an error' })\n      })\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <div>Loading</div>\n    }\n    if (this.state.error) {\n      return <div>{this.state.error}</div>\n    }\n\n\n    const callToWorshipDeclaration = this.state.songs.filter(s => s.flowCategories.includes('Call To Worship') && s.flowSubcategories.includes('Declaration & Praise'))\n    const callToWorshipDraw = this.state.songs.filter(s => s.flowCategories.includes('Call To Worship') && s.flowSubcategories.includes('Drawing Near'))\n    return (\n      <div className=\"container\">\n        <List list={this.state.songs} />\n        <h2>Call to Worship</h2>\n        <List title=\"Declaration and Praise\" list={callToWorshipDeclaration} />\n        <List title=\"Drawing Near\" list={callToWorshipDraw} />\n      </div>\n\n\n    )\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const contentful = require(\"contentful\");\nlet client\nclient = contentful.createClient({\n    space: 'nkx4mjs43g1a',\n    accessToken: 'AJETm98BuwXsHI85-2o5pHoQLyvGYxSH5tGzfFYVTDM'\n});\nmodule.exports = client","module.exports = (content) => {\n    if (!content) { return ([]) }\n    if (!content.items) { return ([]) }\n    return content.items.map(c => c.fields)\n}"],"sourceRoot":""}